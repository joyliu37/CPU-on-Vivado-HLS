// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module issue (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        FunctionalArithmeticUnit_rs_0_func_read,
        FunctionalArithmeticUnit_rs_1_func_read,
        FunctionalArithmeticUnit_rs_2_func_read,
        FunctionalArithmeticUnit_rs_0_busy_read_2,
        FunctionalArithmeticUnit_rs_0_busy_read,
        FunctionalArithmeticUnit_rs_1_busy_read_2,
        FunctionalArithmeticUnit_rs_1_busy_read,
        FunctionalArithmeticUnit_rs_2_busy_read_2,
        FunctionalArithmeticUnit_rs_2_busy_read,
        FunctionalArithmeticUnit_rs_0_s_Q_read,
        FunctionalArithmeticUnit_rs_1_s_Q_read,
        FunctionalArithmeticUnit_rs_2_s_Q_read,
        FunctionalArithmeticUnit_rs_0_s_V_read,
        FunctionalArithmeticUnit_rs_1_s_V_read,
        FunctionalArithmeticUnit_rs_2_s_V_read,
        FunctionalArithmeticUnit_rs_0_t_Q_read,
        FunctionalArithmeticUnit_rs_1_t_Q_read,
        FunctionalArithmeticUnit_rs_2_t_Q_read,
        FunctionalArithmeticUnit_rs_0_t_V_read,
        FunctionalArithmeticUnit_rs_1_t_V_read,
        FunctionalArithmeticUnit_rs_2_t_V_read,
        FunctionalArithmeticUnit_rs_0_s_value_read,
        FunctionalArithmeticUnit_rs_1_s_value_read,
        FunctionalArithmeticUnit_rs_2_s_value_read,
        FunctionalArithmeticUnit_rs_0_t_value_read,
        FunctionalArithmeticUnit_rs_1_t_value_read,
        FunctionalArithmeticUnit_rs_2_t_value_read,
        func,
        Qs,
        Vs,
        Qt,
        Vt,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] FunctionalArithmeticUnit_rs_0_func_read;
input  [7:0] FunctionalArithmeticUnit_rs_1_func_read;
input  [7:0] FunctionalArithmeticUnit_rs_2_func_read;
input  [0:0] FunctionalArithmeticUnit_rs_0_busy_read_2;
input  [0:0] FunctionalArithmeticUnit_rs_0_busy_read;
input  [0:0] FunctionalArithmeticUnit_rs_1_busy_read_2;
input  [0:0] FunctionalArithmeticUnit_rs_1_busy_read;
input  [0:0] FunctionalArithmeticUnit_rs_2_busy_read_2;
input  [0:0] FunctionalArithmeticUnit_rs_2_busy_read;
input  [7:0] FunctionalArithmeticUnit_rs_0_s_Q_read;
input  [7:0] FunctionalArithmeticUnit_rs_1_s_Q_read;
input  [7:0] FunctionalArithmeticUnit_rs_2_s_Q_read;
input  [63:0] FunctionalArithmeticUnit_rs_0_s_V_read;
input  [63:0] FunctionalArithmeticUnit_rs_1_s_V_read;
input  [63:0] FunctionalArithmeticUnit_rs_2_s_V_read;
input  [7:0] FunctionalArithmeticUnit_rs_0_t_Q_read;
input  [7:0] FunctionalArithmeticUnit_rs_1_t_Q_read;
input  [7:0] FunctionalArithmeticUnit_rs_2_t_Q_read;
input  [63:0] FunctionalArithmeticUnit_rs_0_t_V_read;
input  [63:0] FunctionalArithmeticUnit_rs_1_t_V_read;
input  [63:0] FunctionalArithmeticUnit_rs_2_t_V_read;
input  [0:0] FunctionalArithmeticUnit_rs_0_s_value_read;
input  [0:0] FunctionalArithmeticUnit_rs_1_s_value_read;
input  [0:0] FunctionalArithmeticUnit_rs_2_s_value_read;
input  [0:0] FunctionalArithmeticUnit_rs_0_t_value_read;
input  [0:0] FunctionalArithmeticUnit_rs_1_t_value_read;
input  [0:0] FunctionalArithmeticUnit_rs_2_t_value_read;
input  [1:0] func;
input  [7:0] Qs;
input  [63:0] Vs;
input  [7:0] Qt;
input  [63:0] Vt;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;
output  [63:0] ap_return_6;
output  [63:0] ap_return_7;
output  [63:0] ap_return_8;
output  [7:0] ap_return_9;
output  [7:0] ap_return_10;
output  [7:0] ap_return_11;
output  [63:0] ap_return_12;
output  [63:0] ap_return_13;
output  [63:0] ap_return_14;
output  [0:0] ap_return_15;
output  [0:0] ap_return_16;
output  [0:0] ap_return_17;
output  [0:0] ap_return_18;
output  [0:0] ap_return_19;
output  [0:0] ap_return_20;
output  [0:0] ap_return_21;
output  [0:0] ap_return_22;
output  [0:0] ap_return_23;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] ap_return_0;
reg[7:0] ap_return_1;
reg[7:0] ap_return_2;
reg[7:0] ap_return_3;
reg[7:0] ap_return_4;
reg[7:0] ap_return_5;
reg[63:0] ap_return_6;
reg[63:0] ap_return_7;
reg[63:0] ap_return_8;
reg[7:0] ap_return_9;
reg[7:0] ap_return_10;
reg[7:0] ap_return_11;
reg[63:0] ap_return_12;
reg[63:0] ap_return_13;
reg[63:0] ap_return_14;
reg[0:0] ap_return_15;
reg[0:0] ap_return_16;
reg[0:0] ap_return_17;
reg[0:0] ap_return_18;
reg[0:0] ap_return_19;
reg[0:0] ap_return_20;
reg[0:0] ap_return_21;
reg[0:0] ap_return_22;
reg[0:0] ap_return_23;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] func_cast_fu_612_p1;
reg   [7:0] func_cast_reg_1170;
wire   [1:0] i_fu_622_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_fu_567_p6;
reg   [0:0] write_flag_reg_1188;
wire    ap_CS_fsm_state3;
wire   [0:0] grp_fu_582_p6;
reg   [0:0] write_flag4_reg_1193;
wire   [0:0] grp_fu_597_p6;
reg   [0:0] write_flag8_reg_1198;
wire   [0:0] write_flag5_1_fu_642_p6;
reg   [0:0] write_flag5_1_reg_1206;
wire   [0:0] write_flag12_1_fu_656_p6;
reg   [0:0] write_flag12_1_reg_1213;
wire   [0:0] write_flag9_1_fu_670_p6;
reg   [0:0] write_flag9_1_reg_1219;
reg   [1:0] index_reg_290;
wire   [0:0] ReservationStation_b_fu_628_p5;
wire   [0:0] tmp_fu_616_p2;
wire   [1:0] ap_phi_mux_index4_phi_fu_306_p4;
reg   [1:0] index4_reg_302;
reg   [63:0] FunctionalArithmetic_reg_315;
wire   [0:0] tmp_s_fu_637_p2;
reg   [63:0] FunctionalArithmetic_129_reg_332;
reg   [63:0] FunctionalArithmetic_240_reg_349;
reg   [7:0] FunctionalArithmetic_241_reg_366;
reg   [7:0] FunctionalArithmetic_242_reg_383;
reg   [7:0] FunctionalArithmetic_243_reg_400;
reg   [0:0] FunctionalArithmetic_244_reg_417;
reg   [7:0] ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_7_fu_684_p2;
reg   [7:0] ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12;
reg   [7:0] ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12;
reg   [63:0] ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12;
reg   [63:0] ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12;
reg   [63:0] ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12;
reg   [0:0] ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12;
reg   [1:0] grp_fu_567_p5;
reg   [1:0] grp_fu_582_p5;
reg   [1:0] grp_fu_597_p5;
wire   [0:0] write_flag5_4_fu_689_p6;
wire   [0:0] write_flag9_4_fu_712_p6;
wire   [0:0] write_flag12_4_fu_700_p6;
wire   [7:0] FunctionalArithmetic_255_fu_757_p3;
wire   [7:0] FunctionalArithmetic_256_fu_762_p3;
wire   [7:0] FunctionalArithmetic_257_fu_767_p3;
wire   [0:0] FunctionalArithmetic_258_fu_772_p3;
wire   [0:0] FunctionalArithmetic_259_fu_779_p3;
wire   [0:0] FunctionalArithmetic_260_fu_786_p3;
wire   [0:0] FunctionalArithmetic_254_fu_746_p6;
wire   [0:0] FunctionalArithmetic_253_fu_735_p6;
wire   [0:0] FunctionalArithmetic_252_fu_723_p6;
wire   [0:0] FunctionalArithmetic_261_fu_793_p2;
wire   [0:0] FunctionalArithmetic_262_fu_798_p2;
wire   [0:0] FunctionalArithmetic_263_fu_803_p2;
reg   [7:0] ap_return_0_preg;
reg   [7:0] ap_return_1_preg;
reg   [7:0] ap_return_2_preg;
reg   [7:0] ap_return_3_preg;
reg   [7:0] ap_return_4_preg;
reg   [7:0] ap_return_5_preg;
reg   [63:0] ap_return_6_preg;
reg   [63:0] ap_return_7_preg;
reg   [63:0] ap_return_8_preg;
reg   [7:0] ap_return_9_preg;
reg   [7:0] ap_return_10_preg;
reg   [7:0] ap_return_11_preg;
reg   [63:0] ap_return_12_preg;
reg   [63:0] ap_return_13_preg;
reg   [63:0] ap_return_14_preg;
reg   [0:0] ap_return_15_preg;
reg   [0:0] ap_return_16_preg;
reg   [0:0] ap_return_17_preg;
reg   [0:0] ap_return_18_preg;
reg   [0:0] ap_return_19_preg;
reg   [0:0] ap_return_20_preg;
reg   [0:0] ap_return_21_preg;
reg   [0:0] ap_return_22_preg;
reg   [0:0] ap_return_23_preg;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_return_0_preg = 8'd0;
#0 ap_return_1_preg = 8'd0;
#0 ap_return_2_preg = 8'd0;
#0 ap_return_3_preg = 8'd0;
#0 ap_return_4_preg = 8'd0;
#0 ap_return_5_preg = 8'd0;
#0 ap_return_6_preg = 64'd0;
#0 ap_return_7_preg = 64'd0;
#0 ap_return_8_preg = 64'd0;
#0 ap_return_9_preg = 8'd0;
#0 ap_return_10_preg = 8'd0;
#0 ap_return_11_preg = 8'd0;
#0 ap_return_12_preg = 64'd0;
#0 ap_return_13_preg = 64'd0;
#0 ap_return_14_preg = 64'd0;
#0 ap_return_15_preg = 1'd0;
#0 ap_return_16_preg = 1'd0;
#0 ap_return_17_preg = 1'd0;
#0 ap_return_18_preg = 1'd0;
#0 ap_return_19_preg = 1'd0;
#0 ap_return_20_preg = 1'd0;
#0 ap_return_21_preg = 1'd0;
#0 ap_return_22_preg = 1'd0;
#0 ap_return_23_preg = 1'd0;
end

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U82(
    .din0(1'd1),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd0),
    .din4(grp_fu_567_p5),
    .dout(grp_fu_567_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U83(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd0),
    .din3(1'd0),
    .din4(grp_fu_582_p5),
    .dout(grp_fu_582_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U84(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd1),
    .din4(grp_fu_597_p5),
    .dout(grp_fu_597_p6)
);

test_Issue_mux_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_32eOg_U85(
    .din0(FunctionalArithmeticUnit_rs_0_busy_read),
    .din1(FunctionalArithmeticUnit_rs_1_busy_read),
    .din2(FunctionalArithmeticUnit_rs_2_busy_read),
    .din3(index_reg_290),
    .dout(ReservationStation_b_fu_628_p5)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U86(
    .din0(1'd1),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd0),
    .din4(index4_reg_302),
    .dout(write_flag5_1_fu_642_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U87(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd1),
    .din4(index4_reg_302),
    .dout(write_flag12_1_fu_656_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U88(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd0),
    .din3(1'd0),
    .din4(index4_reg_302),
    .dout(write_flag9_1_fu_670_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U89(
    .din0(1'd1),
    .din1(write_flag5_1_reg_1206),
    .din2(write_flag5_1_reg_1206),
    .din3(write_flag5_1_reg_1206),
    .din4(index4_reg_302),
    .dout(write_flag5_4_fu_689_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U90(
    .din0(write_flag12_1_reg_1213),
    .din1(write_flag12_1_reg_1213),
    .din2(1'd1),
    .din3(1'd1),
    .din4(index4_reg_302),
    .dout(write_flag12_4_fu_700_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U91(
    .din0(write_flag9_1_reg_1219),
    .din1(1'd1),
    .din2(write_flag9_1_reg_1219),
    .din3(write_flag9_1_reg_1219),
    .din4(index4_reg_302),
    .dout(write_flag9_4_fu_712_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U92(
    .din0(FunctionalArithmeticUnit_rs_2_t_value_read),
    .din1(FunctionalArithmeticUnit_rs_2_t_value_read),
    .din2(ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12),
    .din3(ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12),
    .din4(index4_reg_302),
    .dout(FunctionalArithmetic_252_fu_723_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U93(
    .din0(FunctionalArithmeticUnit_rs_1_t_value_read),
    .din1(ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12),
    .din2(FunctionalArithmeticUnit_rs_1_t_value_read),
    .din3(FunctionalArithmeticUnit_rs_1_t_value_read),
    .din4(index4_reg_302),
    .dout(FunctionalArithmetic_253_fu_735_p6)
);

test_Issue_mux_42bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 1 ))
test_Issue_mux_42bkb_U94(
    .din0(ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12),
    .din1(FunctionalArithmeticUnit_rs_0_t_value_read),
    .din2(FunctionalArithmeticUnit_rs_0_t_value_read),
    .din3(FunctionalArithmeticUnit_rs_0_t_value_read),
    .din4(index4_reg_302),
    .dout(FunctionalArithmetic_254_fu_746_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_0_preg <= FunctionalArithmetic_255_fu_757_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_10_preg <= ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_11_preg <= ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_12_preg <= ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_13_preg <= ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_14_preg <= ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_15_preg <= FunctionalArithmetic_258_fu_772_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_16_preg <= FunctionalArithmetic_259_fu_779_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_17_preg <= FunctionalArithmetic_260_fu_786_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_18_preg <= FunctionalArithmetic_254_fu_746_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_19_preg <= FunctionalArithmetic_253_fu_735_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_1_preg <= FunctionalArithmetic_256_fu_762_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_20_preg <= FunctionalArithmetic_252_fu_723_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_21_preg <= FunctionalArithmetic_261_fu_793_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_22_preg <= FunctionalArithmetic_262_fu_798_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_23_preg <= FunctionalArithmetic_263_fu_803_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_2_preg <= FunctionalArithmetic_257_fu_767_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_3_preg <= FunctionalArithmetic_243_reg_400;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_4_preg <= FunctionalArithmetic_242_reg_383;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_5_preg <= FunctionalArithmetic_241_reg_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_6_preg <= FunctionalArithmetic_240_reg_349;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_7_preg <= FunctionalArithmetic_reg_315;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 64'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_8_preg <= FunctionalArithmetic_129_reg_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 8'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_return_9_preg <= ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)) | ((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_129_reg_332 <= FunctionalArithmeticUnit_rs_2_s_V_read;
    end else if ((~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1))) begin
        FunctionalArithmetic_129_reg_332 <= Vs;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0))) begin
        FunctionalArithmetic_240_reg_349 <= Vs;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)) | ((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)))) begin
        FunctionalArithmetic_240_reg_349 <= FunctionalArithmeticUnit_rs_0_s_V_read;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0))) begin
        FunctionalArithmetic_241_reg_366 <= Qs;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)) | ((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_241_reg_366 <= FunctionalArithmeticUnit_rs_2_s_Q_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0))) begin
        FunctionalArithmetic_242_reg_383 <= Qs;
    end else if (((~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)) | ((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_242_reg_383 <= FunctionalArithmeticUnit_rs_1_s_Q_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0))) begin
        FunctionalArithmetic_243_reg_400 <= Qs;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_243_reg_400 <= FunctionalArithmeticUnit_rs_0_s_Q_read;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_244_reg_417 <= 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_244_reg_417 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd1))) begin
        FunctionalArithmetic_reg_315 <= Vs;
    end else if ((((1'b1 == ap_CS_fsm_state3) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & (tmp_s_fu_637_p2 == 1'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd0) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)) | (~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd1) & ~(ap_phi_mux_index4_phi_fu_306_p4 == 2'd0) & (1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (tmp_s_fu_637_p2 == 1'd1) & (ap_phi_mux_index4_phi_fu_306_p4 == 2'd0)))) begin
        FunctionalArithmetic_reg_315 <= FunctionalArithmeticUnit_rs_1_s_V_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if (((tmp_fu_616_p2 == 1'd0) & (1'd0 == ReservationStation_b_fu_628_p5))) begin
            index4_reg_302 <= index_reg_290;
        end else if ((tmp_fu_616_p2 == 1'd1)) begin
            index4_reg_302 <= 2'd3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_616_p2 == 1'd0) & (1'd1 == ReservationStation_b_fu_628_p5))) begin
        index_reg_290 <= i_fu_622_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        index_reg_290 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        func_cast_reg_1170[1 : 0] <= func_cast_fu_612_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        write_flag12_1_reg_1213 <= write_flag12_1_fu_656_p6;
        write_flag4_reg_1193 <= grp_fu_582_p6;
        write_flag5_1_reg_1206 <= write_flag5_1_fu_642_p6;
        write_flag8_reg_1198 <= grp_fu_597_p6;
        write_flag9_1_reg_1219 <= write_flag9_1_fu_670_p6;
        write_flag_reg_1188 <= grp_fu_567_p6;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0))) begin
        ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12 = Qt;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12 = FunctionalArithmeticUnit_rs_0_t_Q_read;
    end else begin
        ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0))) begin
        ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12 = Qt;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12 = FunctionalArithmeticUnit_rs_1_t_Q_read;
    end else begin
        ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12 = 'bx;
    end
end

always @ (*) begin
    if ((~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0))) begin
        ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12 = Qt;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12 = FunctionalArithmeticUnit_rs_2_t_Q_read;
    end else begin
        ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0))) begin
        ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12 = Vt;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12 = FunctionalArithmeticUnit_rs_0_t_V_read;
    end else begin
        ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1))) begin
        ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12 = Vt;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12 = FunctionalArithmeticUnit_rs_1_t_V_read;
    end else begin
        ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12 = FunctionalArithmeticUnit_rs_2_t_V_read;
    end else if ((~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1))) begin
        ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12 = Vt;
    end else begin
        ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd0)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd0) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12 = 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state4) & (index4_reg_302 == 2'd1) & (tmp_7_fu_684_p2 == 1'd1)) | (~(index4_reg_302 == 2'd1) & ~(index4_reg_302 == 2'd0) & (1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (tmp_7_fu_684_p2 == 1'd1) & (index4_reg_302 == 2'd0)))) begin
        ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12 = 1'd1;
    end else begin
        ap_phi_mux_FunctionalArithmetic_251_phi_fu_547_p12 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_0 = FunctionalArithmetic_255_fu_757_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_1 = FunctionalArithmetic_256_fu_762_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_10 = ap_phi_mux_FunctionalArithmetic_246_phi_fu_462_p12;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_11 = ap_phi_mux_FunctionalArithmetic_247_phi_fu_479_p12;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_12 = ap_phi_mux_FunctionalArithmetic_248_phi_fu_496_p12;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_13 = ap_phi_mux_FunctionalArithmetic_249_phi_fu_513_p12;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_14 = ap_phi_mux_FunctionalArithmetic_250_phi_fu_530_p12;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_15 = FunctionalArithmetic_258_fu_772_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_16 = FunctionalArithmetic_259_fu_779_p3;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_17 = FunctionalArithmetic_260_fu_786_p3;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_18 = FunctionalArithmetic_254_fu_746_p6;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_19 = FunctionalArithmetic_253_fu_735_p6;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_2 = FunctionalArithmetic_257_fu_767_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_20 = FunctionalArithmetic_252_fu_723_p6;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_21 = FunctionalArithmetic_261_fu_793_p2;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_22 = FunctionalArithmetic_262_fu_798_p2;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_23 = FunctionalArithmetic_263_fu_803_p2;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_3 = FunctionalArithmetic_243_reg_400;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_4 = FunctionalArithmetic_242_reg_383;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_5 = FunctionalArithmetic_241_reg_366;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_6 = FunctionalArithmetic_240_reg_349;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_7 = FunctionalArithmetic_reg_315;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_8 = FunctionalArithmetic_129_reg_332;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_return_9 = ap_phi_mux_FunctionalArithmetic_245_phi_fu_445_p12;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_567_p5 = index4_reg_302;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_567_p5 = ap_phi_mux_index4_phi_fu_306_p4;
    end else begin
        grp_fu_567_p5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_582_p5 = index4_reg_302;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_582_p5 = ap_phi_mux_index4_phi_fu_306_p4;
    end else begin
        grp_fu_582_p5 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_597_p5 = index4_reg_302;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_597_p5 = ap_phi_mux_index4_phi_fu_306_p4;
    end else begin
        grp_fu_597_p5 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_616_p2 == 1'd0) & (1'd1 == ReservationStation_b_fu_628_p5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FunctionalArithmetic_255_fu_757_p3 = ((write_flag_reg_1188[0:0] === 1'b1) ? func_cast_reg_1170 : FunctionalArithmeticUnit_rs_0_func_read);

assign FunctionalArithmetic_256_fu_762_p3 = ((write_flag4_reg_1193[0:0] === 1'b1) ? func_cast_reg_1170 : FunctionalArithmeticUnit_rs_1_func_read);

assign FunctionalArithmetic_257_fu_767_p3 = ((write_flag8_reg_1198[0:0] === 1'b1) ? func_cast_reg_1170 : FunctionalArithmeticUnit_rs_2_func_read);

assign FunctionalArithmetic_258_fu_772_p3 = ((grp_fu_567_p6[0:0] === 1'b1) ? FunctionalArithmetic_244_reg_417 : FunctionalArithmeticUnit_rs_0_s_value_read);

assign FunctionalArithmetic_259_fu_779_p3 = ((grp_fu_582_p6[0:0] === 1'b1) ? FunctionalArithmetic_244_reg_417 : FunctionalArithmeticUnit_rs_1_s_value_read);

assign FunctionalArithmetic_260_fu_786_p3 = ((grp_fu_597_p6[0:0] === 1'b1) ? FunctionalArithmetic_244_reg_417 : FunctionalArithmeticUnit_rs_2_s_value_read);

assign FunctionalArithmetic_261_fu_793_p2 = (write_flag5_4_fu_689_p6 | FunctionalArithmeticUnit_rs_0_busy_read_2);

assign FunctionalArithmetic_262_fu_798_p2 = (write_flag9_4_fu_712_p6 | FunctionalArithmeticUnit_rs_1_busy_read_2);

assign FunctionalArithmetic_263_fu_803_p2 = (write_flag12_4_fu_700_p6 | FunctionalArithmeticUnit_rs_2_busy_read_2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_phi_mux_index4_phi_fu_306_p4 = index4_reg_302;

assign func_cast_fu_612_p1 = func;

assign i_fu_622_p2 = (index_reg_290 + 2'd1);

assign tmp_7_fu_684_p2 = ((Qt == 8'd0) ? 1'b1 : 1'b0);

assign tmp_fu_616_p2 = ((index_reg_290 == 2'd3) ? 1'b1 : 1'b0);

assign tmp_s_fu_637_p2 = ((Qs == 8'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    func_cast_reg_1170[7:2] <= 6'b000000;
end

endmodule //issue
